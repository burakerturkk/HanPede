// <auto-generated />
using HanPerde.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HanPerde.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220707153235_decorativename")]
    partial class decorativename
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HanPerde.Models.AccBracol", b =>
                {
                    b.Property<int>("AccBracolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccBracolImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccBracolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("AccBracolID");

                    b.HasIndex("CategoryId");

                    b.ToTable("AccBracols");
                });

            modelBuilder.Entity("HanPerde.Models.AccDecorative", b =>
                {
                    b.Property<int>("AccDecorativeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccDecorativeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccDecorativeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("AccDecorativeID");

                    b.HasIndex("CategoryId");

                    b.ToTable("AccDecoratives");
                });

            modelBuilder.Entity("HanPerde.Models.AccFringe", b =>
                {
                    b.Property<int>("AccFringeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccFringeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccFringeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("AccFringeId");

                    b.HasIndex("CategoryId");

                    b.ToTable("AccFringes");
                });

            modelBuilder.Entity("HanPerde.Models.AccRail", b =>
                {
                    b.Property<int>("AccRailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccRailImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccRailName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("AccRailId");

                    b.HasIndex("CategoryId");

                    b.ToTable("AccRails");
                });

            modelBuilder.Entity("HanPerde.Models.AccRenso", b =>
                {
                    b.Property<int>("AccRensoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccRensoImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccRensoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("AccRensoId");

                    b.HasIndex("CategoryId");

                    b.ToTable("AccRensos");
                });

            modelBuilder.Entity("HanPerde.Models.AccRustik", b =>
                {
                    b.Property<int>("AccRustikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccRustikImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccRustikName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("AccRustikID");

                    b.HasIndex("CategoryId");

                    b.ToTable("AccRustiks");
                });

            modelBuilder.Entity("HanPerde.Models.AccTassel", b =>
                {
                    b.Property<int>("AccTasselID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccTasselImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccTasselName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("AccTasselID");

                    b.HasIndex("CategoryId");

                    b.ToTable("AccTassels");
                });

            modelBuilder.Entity("HanPerde.Models.Accessory", b =>
                {
                    b.Property<int>("AccessoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("AccessoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("HanPerde.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminRole")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("HanPerde.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HanPerde.Models.Curtain", b =>
                {
                    b.Property<int>("CurtainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CurtainImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurtainName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurtainId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Curtains");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainFon", b =>
                {
                    b.Property<int>("CurtainFonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CurtainFonImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurtainFonName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurtainFonID");

                    b.HasIndex("CategoryId");

                    b.ToTable("CurtainFons");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainJaluzi", b =>
                {
                    b.Property<int>("CurtainJaluziID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CurtainJaluziImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurtainJaluziName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurtainJaluziID");

                    b.HasIndex("CategoryId");

                    b.ToTable("CurtainJaluzis");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainMetalJaluzi", b =>
                {
                    b.Property<int>("CurtainMetalJaluziID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CurtainMetalJaluziImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurtainMetalJaluziName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurtainMetalJaluziID");

                    b.HasIndex("CategoryId");

                    b.ToTable("CurtainMetalJaluzis");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainPlisel", b =>
                {
                    b.Property<int>("CurtainPliselID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CurtainPliselImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurtainPliselName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurtainPliselID");

                    b.HasIndex("CategoryId");

                    b.ToTable("CurtainPlisels");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainStore", b =>
                {
                    b.Property<int>("CurtainStoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CurtainStoreImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurtainStoreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurtainStoreID");

                    b.HasIndex("CategoryId");

                    b.ToTable("CurtainStores");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainTulle", b =>
                {
                    b.Property<int>("CurtainTulleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CurtainTulleImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurtainTulleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurtainTulleID");

                    b.HasIndex("CategoryId");

                    b.ToTable("CurtainTulles");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainVertical", b =>
                {
                    b.Property<int>("CurtainVerticalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CurtainVerticalImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurtainVerticalName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurtainVerticalID");

                    b.HasIndex("CategoryId");

                    b.ToTable("CurtainVerticals");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainZebra", b =>
                {
                    b.Property<int>("CurtainZebraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CurtainZebraImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurtainZebraName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurtainZebraID");

                    b.HasIndex("CategoryId");

                    b.ToTable("CurtainZebras");
                });

            modelBuilder.Entity("HanPerde.Models.AccBracol", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.AccDecorative", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.AccFringe", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.AccRail", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.AccRenso", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.AccRustik", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.AccTassel", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.Accessory", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany("Accessories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.Curtain", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany("Curtains")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainFon", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainJaluzi", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainMetalJaluzi", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainPlisel", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainStore", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainTulle", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainVertical", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.CurtainZebra", b =>
                {
                    b.HasOne("HanPerde.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HanPerde.Models.Category", b =>
                {
                    b.Navigation("Accessories");

                    b.Navigation("Curtains");
                });
#pragma warning restore 612, 618
        }
    }
}
